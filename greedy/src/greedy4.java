import java.util.Scanner;

public class greedy4 {

    public static void main(String[] args) {

        /** 1이 될 때까지
         * 어떠한 수 N이 1이 될 때까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고 한다. 단, 두 번째 연산은 N이 K로 나누어떨어질 때만 선택할 수 있다.
         * 1. N에서 1을 뺀다.
         * 2. N을 K로 나눈다.
         * 예를 들어 N이 17, K가 4라고 가정하자. 이때 1번의 과정을 한 번 수행하면 N은 16이 된다. 이후에 2번의 과정을 두 번 수행하면 N은 1이 된다. 결과적으로 이 경우 전체 과정을 실행한 횟수는 3이 된다. 이는 N을 1로 만드는 최소 횟수이다.
         * N과 K가 주어질 때 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 최소 횟수를 구하는 프로그램을 작성하시오.
         *
         * 첫째 줄에 N(2<=N<=100,000)과 K(2<=K<=100,000)가 공백으로 구분되며 각각 자연수로 주어진다. 이때 입력으로 주어지는 N은 항상 K보다 크거나 같다.
         * 첫째 줄에 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 횟수의 최솟값을 출력한다.
         */

        /** solution
         * 주어진 N에 대하여 '최대한 많이 나누기'를 수행하면 된다. 왜냐하면 어떠한 수가 있을 때, '2 이상의 수로 나누는 것'이 '1을 빼는 것'보다 숫자를 훨씬 많이 줄일 수 있기 때문이다.
         */
        int n, k;

        int result = 0;

        System.out.println("N을 K로 나누거나 1을 빼서 1이 될 때까지 수행하는 연산의 최소횟수를 구하시오");
        Scanner sc = new Scanner(System.in);
        System.out.println("n 값을 입력하시오");
        n = sc.nextInt();
        System.out.println("k 값을 입력하시오");
        k = sc.nextInt();

        /*

         N의 범위가 10만 이하이므로, 이처럼 일일이 1씩 빼도 문제를 해결할 수 있다.
         하지만 N이 100억 이상의 큰 수가 되는 경우를 가정했을 때에도 빠르게 동작하려면, N이 K의 배수가 되도록 효율적으로 한 번에 빼는 방식으로 소스코드를 작성해야 한다.

        while (true) {
            if (n == 1){
                break;
            }else if (n % k == 0){
                n = n / k;
                ++result;
            }else {
                --n;
                ++result;
            }
        }
         */

        while (true) {

            int target = (n / k) * k;   // n이 k로 나누어 떨어지지 않는 경우에 k로 나누어 떨어지는 가장 가까운 수
            result += (n - target);     // k로 나누어 떨어지는 수가 되기까지 1을 몇 번 뺐는지
            n = target;
            // N이 K보다 작을 때 (더 이상 나눌 수 없을 때) 반복문 탈출
            if (n < k) break;
            // K로 나누기
            result += 1;
            n /= k;
        }

        // 마지막으로 남은 수에 대하여 1씩 빼기
        result += (n - 1);

        System.out.printf("최소 횟수는 %d회 입니다.", result);
    }

}