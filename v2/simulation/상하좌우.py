"""
[문제1] 상하좌우: 문제 설명
여행가 A는 NXN 크기의 정사각형 공간 위에 서 있습니다.
이 공간은 1X1 크기의 정사각형으로 나누어져 있습니다.
가장 왼쪽 위 좌표는 (1,1)이며, 가장 오른쪽 아래 좌표는 (N,N)에 해당합니다.
여행가 A는 상,하,좌,우 방향으로 이동할 수 있으며, 시작 좌표는 항상 (1,1)입니다.
우리 앞에는 여행가 A가 이동할 계획이 적힌 계획서가 놓여 있습니다.

계획서에는 하나의 줄에 띄어쓰기를 기준으로 하여 L,R,U,D 중 하나의 문자가 반복적으로 적혀있습니다.
각 문자의 의미는 다음과 같습니다.
L: 왼쪽으로 한 칸 이동
R: 오른쪽으로 한 칸 이동
U: 위로 한 칸 이동
D: 아래로 한 칸 이동

이때 여행가 A가 NXN 크기의 정사각형 공간을 벗어나는 움직임은 무시됩니다.

1. 아이디어
이동에 따른 변화량 정의
dx = [0, 0, -1, 1]  # L, R, U, D
dy = [-1, 1, 0, 0]  # L, R, U, D
2. 시간복잡도
O(n) n = 계획서 길이

3. 자료구조
배열

"""
n = int(input("맵 크기 입력:"))
plans = "RRRUDD"

x, y = 1, 1  # 시작 위치 (1, 1)
# 각 명령어에 따른 이동 방향 정의 (L, R, U, D)
move_types = ['L', 'R', 'U', 'D']
# 이동에 따른 변화 정의
dx = [0, 0, -1, 1]  # L, R, U, D
dy = [-1, 1, 0, 0]  # L, R, U, D

# 명령어 하나씩 처리
for plan in plans:
    for i in range(len(move_types)):
        if plan == move_types[i]:
            nx = x + dx[i]
            ny = y + dy[i]
            # 공간을 벗어나는 움직임은 무시
            if 1 <= nx <= n and 1 <= ny <= n:
                x, y = nx, ny
print(x, y)