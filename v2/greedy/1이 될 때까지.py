"""
[문제2] 1이 될 때까지: 문제 설명
어떠한 수 N이 1이 될 때까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고 합니다.
1. n/k
2. n-1
단, 두번째 연산은 N이 K로 나누어 떨어질 때만 선택할 수 있습니다.

예를 들어 N이 17, K가 4라고 가정하자. 이때 1번의 과정을 한 번 수행하면 N은 16이 된다.
이후에 2번의 과정을 두 번 수행하면 N은 1이 된다. 결과적으로 이 경우 전체 과정을 실행한 횟수는 3이 된다. 이는 N을 1로 만드는 최소 횟수이다.

N과 K가 주어질 때 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 최소 횟수를 구하는 프로그램을 작성하시오.

1. 아이디어
주어진 N에 대하여 최대한 많은 나누기 진행

2. 시간복잡도
O(log K N+N)

3. 자료구조
없음
"""

#입력받기
n = int(input("N값 입력하세요: "))
k = int(input("K값 입력하세요: "))

# cnt = 0
# while n > 1:
#     if n % k == 0:
#         n = n // k
#         cnt += 1
#     else :
#         n -= 1
#         cnt += 1
# print(cnt)

count = 0
while True:
    target = (n//k)*k # n이 k로 나누어 떨어질 수 있는 target 찾기
    count += (n - target) # n에서 target 까지 되도록 -1 해야하는 횟수 더함
    n = target # 한번에 빼주기

    if n < k: # n이 더이상 k로 나눠질 수 없다면 빠져나감
        break

    count += 1 # n을 k로 나누기
    n //= k

count += (n-1) # 남은 수에서 1이 될때까지 빼는 횟수 더함
print(count)